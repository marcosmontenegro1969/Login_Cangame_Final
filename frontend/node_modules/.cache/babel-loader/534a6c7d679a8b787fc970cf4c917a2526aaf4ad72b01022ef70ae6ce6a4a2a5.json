{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-login\\\\frontend\\\\appfront\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\"; //Importa a biblioteca Axios para realizar solicitações HTTP ao servidor.\nimport { useState } from \"react\"; //Importa a função useState do React. Ela é um hook que permite adicionar estado a componentes de função.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  //Cria o componente Login. Ele é uma função que retorna um elemento JSX.\n  const [email, setEmail] = useState(''); //Cria o estado \"email\" e a função \"setEmail\" para atualizá-lo, e o inicializa com uma string vazia.\n  const [senha, setSenha] = useState(''); //Cria o estado \"senha\" e a função \"setSenha\" para atualizá-lo, e o inicializa com uma string vazia.\n  const [error, setError] = useState(''); //Cria o estado \"error\" e a função \"setError\" para atualizá-lo, e o inicializa com uma string vazia.\n  const [usuario, setUsuario] = useState(null); //Cria o estado \"usuario\" e a função \"setUsuario\" para atualizá-lo, e o inicializa com \"null\".\n\n  const handleLogin = async evento => {\n    //cria uma função assíncrona que recebe um evento (click) como parâmetro.\n    evento.preventDefault(); //impede a ação padrão do evento clique (envio dos dados do formulário e recarregamento da página).\n\n    try {\n      //Tenta executar o código abaixo. Se ocorrer um erro, o bloco catch será executado.\n      const response = await axios.post(\n      //Envia uma solicitação de login para o servidor utilizando Axios.\n      'http://localhost:3000/login',\n      //URL do servidor que receberá a solicitação.\n      JSON.stringify({\n        email,\n        senha\n      }),\n      //Dados que serão enviados para o servidor. Neste caso, o email e a senha.\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); //Configura o cabeçalho padrão da solicitação JSON.\n\n      setUsuario(response.data); //Se a resposta da solicitação foi 200 (bem sucedida), atualiza o estado \"usuario\" com os dados do usuário.\n    } catch (error) {\n      //Se ocorrer um erro durante a solicitação:\n      if (!(error !== null && error !== void 0 && error.response)) {\n        //Se o servidor respondeu com nulo ou indefinido.\n        setError('Erro ao acessar o servidor'); //Define uma mensagem de erro que não foi possível acessar o servidor.\n      } else if (error.response.status === 401) {\n        //Se o servidor respondeu um status 401 (Não autorizado)\n        setError('Usuário ou senha inválidos'); //Define uma mensagem de erro que o usuário ou senha são inválidos.\n      }\n    }\n  };\n  const handleLogout = () => {\n    //cria uma função que não recebe parâmetros.\n    setUsuario(null); //Atualiza o estado \"usuario\" com nulo.\n    setError(''); //Atualiza o estado \"error\" com uma string vazia.\n  };\n  return (\n    /*#__PURE__*/\n    //Retorna um elemento JSX.\n    _jsxDEV(\"div\", {\n      className: \"container_Formulario_Login\",\n      children: [\" //Cria uma div com a classe \\\"container_Formulario_Login\\\".\", usuario == null ?\n      /*#__PURE__*/\n      //(operador ternário) - Se o estado \"usuario\" for nulo, exibe o formulário de login. Se não (usuario foi autenticado \"Ok\"), exibe a mensagem de boas vindas.\n      _jsxDEV(\"div\", {\n        children: [\" //Cria uma div para conter todos os\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"formulario_Login\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"email\",\n            required: true,\n            onChange: evento => setEmail(evento.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"senha\",\n            placeholder: \"senha\",\n            required: true,\n            onChange: evento => setSenha(evento.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-login\",\n            onClick: evento => handleLogin(evento),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div_Logado\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Ol\\xE1 \", usuario.nome, \", v\\xE1 pra tela de Jo\\xE3o\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn_Logado\",\n          onClick: () => handleLogout(),\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n//Permite a exportação do componente Login para que possa ser usado em outros arquivos.\n_s(Login, \"MMDUGyL6de2fJGgLuutl2lDZD9o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","error","setError","usuario","setUsuario","handleLogin","evento","preventDefault","response","post","JSON","stringify","headers","data","status","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","onChange","target","value","onClick","id","nome","_c","$RefreshReg$"],"sources":["C:/react-login/frontend/appfront/src/components/Login.js"],"sourcesContent":["import axios from \"axios\"; //Importa a biblioteca Axios para realizar solicitações HTTP ao servidor.\r\nimport { useState } from \"react\"; //Importa a função useState do React. Ela é um hook que permite adicionar estado a componentes de função.\r\n\r\nfunction Login() {//Cria o componente Login. Ele é uma função que retorna um elemento JSX.\r\n  const [email, setEmail] = useState(''); //Cria o estado \"email\" e a função \"setEmail\" para atualizá-lo, e o inicializa com uma string vazia.\r\n  const [senha, setSenha] = useState(''); //Cria o estado \"senha\" e a função \"setSenha\" para atualizá-lo, e o inicializa com uma string vazia.\r\n  const [error, setError] = useState(''); //Cria o estado \"error\" e a função \"setError\" para atualizá-lo, e o inicializa com uma string vazia.\r\n  const [usuario, setUsuario] = useState(null); //Cria o estado \"usuario\" e a função \"setUsuario\" para atualizá-lo, e o inicializa com \"null\".\r\n  \r\n  const handleLogin = async(evento) => { //cria uma função assíncrona que recebe um evento (click) como parâmetro.\r\n    evento.preventDefault(); //impede a ação padrão do evento clique (envio dos dados do formulário e recarregamento da página).\r\n\r\n    try { //Tenta executar o código abaixo. Se ocorrer um erro, o bloco catch será executado.\r\n      const response = await axios.post( //Envia uma solicitação de login para o servidor utilizando Axios.\r\n        'http://localhost:3000/login', //URL do servidor que receberá a solicitação.\r\n        JSON.stringify({ email, senha }), //Dados que serão enviados para o servidor. Neste caso, o email e a senha.\r\n        { headers: { 'Content-Type': 'application/json' }}); //Configura o cabeçalho padrão da solicitação JSON.\r\n    \r\n      setUsuario(response.data); //Se a resposta da solicitação foi 200 (bem sucedida), atualiza o estado \"usuario\" com os dados do usuário.\r\n    \r\n    } catch (error) { //Se ocorrer um erro durante a solicitação:\r\n      if (!error?.response) { //Se o servidor respondeu com nulo ou indefinido.\r\n        setError('Erro ao acessar o servidor'); //Define uma mensagem de erro que não foi possível acessar o servidor.\r\n      } else if (error.response.status === 401) {//Se o servidor respondeu um status 401 (Não autorizado)\r\n        setError('Usuário ou senha inválidos'); //Define uma mensagem de erro que o usuário ou senha são inválidos.\r\n      }\r\n    }\r\n      };\r\n\r\n  const handleLogout = () => { //cria uma função que não recebe parâmetros.\r\n    setUsuario(null); //Atualiza o estado \"usuario\" com nulo.\r\n    setError(''); //Atualiza o estado \"error\" com uma string vazia.\r\n  };\r\n  \r\n  return ( //Retorna um elemento JSX.\r\n    \r\n    <div className = 'container_Formulario_Login'> //Cria uma div com a classe \"container_Formulario_Login\".\r\n      {usuario == null ? ( //(operador ternário) - Se o estado \"usuario\" for nulo, exibe o formulário de login. Se não (usuario foi autenticado \"Ok\"), exibe a mensagem de boas vindas.\r\n        <div> //Cria uma div para conter todos os \r\n          <h2>Login</h2> {/*cria o titulo \"Login\"*/}\r\n          {/*cria um formulario para conter os dados que serão enviados ao servidor*/}\r\n          <form className = 'formulario_Login'> \r\n\r\n            {/*cria os campos input e define \"placeholder\" para ambos */}\r\n            {/*onChange é um evento que ocorre quando o valor do campo é alterado.*/}\r\n            {/*onChange={(evento) => setEmail(evento.target.value)} é uma função que recebe um evento e atualiza o estado \r\n            \"email\" com o valor do campo input.*/}\r\n            {/*onChange={(evento) => setSenha(evento.target.value)} é uma função que recebe um evento e atualiza o estado\r\n            \"senha\" com o valor do campo input.*/}\r\n            <input type=\"email\" name=\"email\" placeholder= \"email\" required onChange={(evento) => setEmail(evento.target.value)}/>\r\n            <input type=\"password\" name=\"senha\" placeholder = \"senha\" required onChange={(evento) => setSenha(evento.target.value)}/>\r\n\r\n            {/*cria um botão padrão para enviar os dados. Quando o botão é acionado (pelo cique do mouse ou enter\r\n            no teclado), o \"onClick\" chama a função handleLogin, e passa pra ela o parâmetro \"evento\", que neste caso\r\n            é o \"clique\".*/}\r\n            <button type=\"submit\" className='btn-login' onClick = {(evento) => handleLogin(evento)}>Login</button>\r\n          </form>\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n          <div id=\"div_Logado\">\r\n            <h2>Olá {usuario.nome}, vá pra tela de João</h2>\r\n            <button type=\"button\" className='btn_Logado' onClick={() => handleLogout()}>Sair</button>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Permite a exportação do componente Login para que possa ser usado em outros arquivos.\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}